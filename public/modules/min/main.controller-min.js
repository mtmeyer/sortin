angular.module("fontPairApp").controller("MainController",function(e,t){e.$on("onRepeatLast",function(e,t,l){console.log("loaded"),$("#loadingOverlay").addClass("loadingFalse"),$("#loadingOverlay").removeClass("loadingTrue")}),t.getPairs().then(function(t){e.pairs=t.data,0===e.pairs.length?(e.documentsPresent=!1,$("#mainContentContainer").addClass("emptyState"),$("#dropdownContainer").addClass("displayNone"),$("#loadingOverlay").addClass("loadingFalse"),$("#loadingOverlay").removeClass("loadingTrue")):e.documentsPresent=!0}),e.selectedFilter="Recent",e.headerAddHover=function(e){"in"===e?$("#headerAddBtn").attr("src",function(e,t){return t.replace(".svg","_hover.svg")}):"out"===e&&$("#headerAddBtn").attr("src",function(e,t){return t.replace("_hover.svg",".svg")})},e.filterChange=function(t){"recent"===t?(e.selectedFilter="Recent",$("#likedFilterBtn").removeClass("filterSelected"),$("#likedFilterBtn").addClass("filterUnselected"),$("#recentFilterBtn").addClass("filterSelected")):"liked"===t&&(e.selectedFilter="Most Liked",$("#recentFilterBtn").removeClass("filterSelected"),$("#recentFilterBtn").addClass("filterUnselected"),$("#likedFilterBtn").addClass("filterSelected"))},e.addLike=function(e){console.log(e.likes),e.likes=e.likes+1,console.log(e.likes),t.addLike(e).then(function(e){},function(e){alert(e)})}});